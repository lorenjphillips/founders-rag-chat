Episode: #275 Paul Graham
URL: https://podcasts.apple.com/us/podcast/275-paul-graham/id1141877104?i=1000584968921
Transcribed: /home/lphillips/Dev/apple-podcast-transcribe-mac

--------------------------------------------------------------------------------

How to do what you love. To do something well, you have to like it. That idea is not exactly novel. We've got it down to just four words. Do what you love. But it's not enough just to tell people that. Doing what you love is complicated. When I was a kid, it seemed as if work and fun were opposites by definition. Life had two states. Some of the time adults were making you do things and that was called work. The rest of the time you could do what you wanted and that was called playing. Work was pretty much defined as not fun and it did not seem to be an accident. School, it was implied, was tedious because it was preparation for grown-up work. If we make kids work on dull stuff, it might be wise to tell them that tediousness is not the defining quality of work and indeed that the reason they have to work on dull stuff now is so that they can work on more interesting stuff later. Once when I was about 9 or 10, my father told me that I could be whatever I wanted when I grew up so long as I enjoyed it. I didn't think he meant work could literally be fun. Fun like playing. It took me years to grasp that. It was not until I was in college that the idea of work finally broke free from the idea of making a living. Then the important question became not how to make money, but what to work on. The definition of work was now to make some original contribution to the world and in the process not to starve. How much are you supposed to like what you do? Unless you know that you don't know when to stop searching and if like most people you underestimate it, you tend to stop searching too early. You'll end up doing something chosen for you by your parents or the desire to make money or prestige or sheer inertia. Here is an upper bound. Do what you love doesn't mean do what you would like to do most this second. Even Einstein probably had moments when he wanted to have a cup of coffee, but told himself he ought to finish what he was working on first. It used to perplex me when I read about people who liked what they did so much that there was nothing they'd rather do. There didn't seem to be any sort of work that I like that much. If I had a choice of A, spending the next hour working on something or B, be teleported to Rome and spend the next hour wandering about, was there any sort of work I'd prefer? Honestly, no. But the fact is almost anyone would rather at any given moment float about in the Caribbean or have sex or eat some delicious food, then work on hard problems. Doing what you love doesn't mean do what makes you happiest this second, but will make you happiest over some longer period. Unproductive pleasures pale eventually. After a while you get tired of lying on the beach. If you want to stay happy, you have to do something. As a lower bound, you have to like your work more than any unproductive pleasure. You have to like what you do enough that the concept of quote-unquote spare time seems mistaken, which is not to say that you have to spend all your time working. You can only work so much before you get tired and start to screw up. Then you want to do something else, even something mindless, but you don't regard this time as the prize and the time you spend working as the pain you endure to earn it. I put the lower bound there for practical reasons. If your work is not your favorite thing to do, you'll have terrible problems with procrastination. You will have to force yourself to work and when you resort to that the results are distinctly inferior. To be happy, I think you have to be doing something you not only enjoy, but admire. You have to be able to say at the end, wow, that's pretty cool. What you should not do, I think, is worry about the opinion of anyone beyond your friends. You should not worry about prestige. Prestige is the opinion of the rest of the world. When you can ask the opinions of people's who judgment you respect, what does it add to consider the opinions of people you don't even know? This is easy advice to give. It's hard to follow. If you do anything well enough, you'll make it prestigious. Plenty of things we now consider prestigious were anything but at first. Jazz comes to mind, though almost any established art form would do. So just do what you like and let prestige take care of itself. The other big force leading people astray is money. The test of whether people love what they do is whether they do it even if they weren't paid for it. Even if they had to work at another job to make a living. With such powerful forces leading us astray, it's not surprising we find it so hard to discover what we like to work on. Most people are doomed in childhood by accepting the axiom that work equals pain. Those who escape this are nearly all lured onto the rocks by prestige or money. How many people even discover something they love to work on? A few hundred thousand perhaps out of billions. It's hard to find work you love. It must be if so few do. So don't underestimate this task and don't feel bad if you haven't succeeded yet. In fact, if you admit to yourself that you're discontented, you're a step ahead of most people who are still in denial. Although great work takes less discipline than people think, because the way to do great work is to find something you like so much that you don't have to force yourself to do it, finding work you love does usually require discipline. Is there some test you can use to keep yourself honest? Always produce. For example, if you have a day job you don't take seriously because you plan to be a novelist, are you producing? Are you writing pages of fiction? However bad they may be, as long as you're producing, you'll know you're not merely using the hazy vision of the grand novel you plan to write one day as an opiate. Always produce is also a heuristic for finding work you love. It will automatically push you away from things you think you're supposed to work on towards things that you actually like. Always produce will discover your life's work the way water with the aid of gravity finds the hole in your roof. This may be my favorite line of the entire essay. You have to make a conscious effort to keep your ideas about what you want from being contaminated by what seems possible. One has to make a living and it's hard to get paid for doing work you love. And then he goes into one reason why it's so difficult to find work that you love to do is the fact that we usually have to decide what we're going to do way too early. A friend of mine who is quite successful doctor complains constantly about her job. When people applying to medical school ask her for advice, she wants to shake them and yell, don't do it, but she never does. How did she get into this fix? In high school, she already wanted to be a doctor and she is so ambitious and determined that she overcame every obstacle along the way, including unfortunately not liking it. Now she has a life chosen for her by a high school kid. When you're young, you're given the impression that you'll get enough information to make each choice before you need to make it. But this is certainly not so with work. When you're deciding what to do, you have to operate on ridiculously incomplete information. In the design of lives, as in the design of most other things, you get better results if you use flexible media. Your best bet may be to choose a type of work that could turn into either an organic or two job career. That is probably part of the reason I chose computers. You can be a professor or you can make a lot of money or morph into any number of other kinds of work. It is also wise early on to seek jobs that let you do many different things so you can learn faster what various kinds of work are like. It is harder than it looks. Constraints give your life shape. Remove them and most people have no idea what to do. Look at what happens to those who win lotteries or inherit money. Much as everyone thinks they want financial security, the happiest people are not those who have it, but those who like what they do. Whichever route you take, expect a struggle. Finding work you love is very difficult. Most people fail. Even if you succeed, it's rare to be free to work on what you want until your 30s or 40s. But if you have the destination in sight, you'll be more likely to arrive at it. If you know you can love work, you're in the homestretch. And if you know what work you love, you're practically there. That was an excerpt from an essay that changed my life. It's called How to Do What You Love and it was written by Paul Graham. So I've been reading Paul Graham's essays for years. I think they are the most influential writing for technology startups ever. And they've had a profound impact on me personally as well. So in case you don't know who Paul Graham is, he's a programmer, a writer. He founded this company called ViaWeb. I think within two years they sold it for close to 50 million dollars to Yahoo. This happened back in the late 90s. Then in the early to mid 2000s, he found another company called Y Combinator, which turned out to be this giant machine that made it easier to start a company and to get funding and really just make it easier to allow more people to run experiments that hopefully turn into successful companies. And so this episode is going to be a little different from what I normally do. Obviously normally I read a book and then I tell you what I learned. This I've been working on it for a few weeks and originally put all of his essays into like this giant PDF and I was trying to work my way through it. I was like, you know what? This doesn't feel like what I the normal process I do for founders. So what I did is actually bought a printer. I did not have a printer. So I bought a printer and then I just started printing out his essays individually and it didn't take me long. It took me a day to realize, oh no, because not only has he been writing essays and they're amazing essays for over 20 years. So I started printing them out. I'm like, oh my God, I had to literally ran out of ink the first day. And he is such a gifted writer that as you start working your way through these essays, this is why it's taking weeks for me to do this. There's no fluff. So as a result, I have a ton of highlights and notes. This is going to wind up being two episodes. And in the show notes, you're going to find time stamps and links to because you can read all of his essays for free online. You're going to find time stamps and links to every single essay that I talk about. And so the reason I started this podcast with How to Do What You Love is because that essay changed my life. I remember exactly where I was. I was up one night. It was July 2018. I know it's not the first time I read the essay. Might have been second, third. I can't actually remember, but I remember distinctly reading it and just snapping. And you can see this in the upload dates of Founders Podcast. Before July 2018, for the previous like two, two and a half years, my uploads and the rate I was making podcasts was completely intermittent. There was nothing you could even call consistency by any definition. I was just making the podcast because I like to make the podcast. I thought it was interesting, but I was hesitating because I had no idea how the hell to turn it into a business and where I can actually do what I love to do. And if you were to print that essay out, it is nine pages, 10 pages with footnotes of him telling you, hey, this is really important to figure out. It's not easy to do. So few people do it, but it'll change your life. And so what I decided that night was that I was going to focus 100% on Founders and then I was willing to spend my last dollar in savings to try to make this work. I thought if I gave it my full attention and pursued what I was genuinely interested in, something I will work on seven days a week because I felt compelled to, that I would find a way to make it work. But that decision, that like that snapping, that pushing me over the edge, I don't think would have happened without reading this essay. So with that, I want to jump into his essay, What Doesn't Seem Like Work. My father's a mathematician. He was one of those lucky people who knew early on what they want to do. When you talk to him about his childhood, there's a clear watershed moment at about age 12 when he said he got interested in maths. He grew up in a small Welsh seacoast town. As we retraced his walk to school on Google Street View, he said that it had been nice growing up in the country. Didn't it get boring when you got to be about 15, I asked? No, he said. By then I was interested in maths. And so Paul goes into what one of the things he learned from this conversation that he's having with his father. Few people know so early or so certainly what they want to work on. But talking to my father reminded me of a heuristic the rest of us can use. If something that seems like work to other people doesn't seem like work to you, that's something you're well suited for. For example, a lot of programmers actually let me pause it before I go into he's going to talk about what this is for him, which is programming. That when I got to this section, this is exact when you read about I did I read I think a 700 600 700 page biography of Michael Jordan. Then I read like his 200 page autobiography. This is episode 212 of founders and 213. If you haven't listened to him, I go back some of my favorite episodes I've ever made. But what you hear is everybody around Michael Jordan says stuff like he's the most Michael Jordan's most driven person I've ever met. He's the hardest working person I've ever met. He's got the best work ethic I've ever met. But if you ask Jordan, he says he doesn't like working at all and that everything he did. It felt like play. It just looked like work to other people. So there's a Paul has seen not only he's got a lifetime of experience, right? But he has seen why commoners funded thousands of of startups. So he has like this encyclopedic knowledge because he's just been exposed to these examples over and over again. There's so many times when I'm reading his essays that I'm like, yep, I've saw the exact same thing by reading hundreds of biographies and that's one of them right there. If something that seems like work to other people doesn't seem like work to you, that's something you're well suited for. For example, a lot of programmers I know including me actually like debugging. It's not something people tend to volunteer. One likes it the way one likes popping zits, but you may have to like debugging to like programming. Considering the degree to which programming consists of it. The stranger your tastes seem to other people the stronger evidence they probably are what you should do. It seemed curious that the same task could be painful to one person and pleasant to another. But I didn't realize it at the time what this imbalance implied because I wasn't looking for it. I'm going to pause there again. I don't want to make too much of this about me, but there's so many times I'm like, yep, I know exactly what you're talking about. Specifically in my life I don't think I'm unique at all to the response of that like identifying with what Paul's explained to us. Obviously, I just started saying hey this essay pushed me over the edge and really changed my life. I feel the same way about reading. So in some degree I'm almost like a bad person to to ask for like book recommendations from. Because I didn't know this what he's saying is like I didn't seem curious the same task could be painful to one person and pleasant to another because I like I guess it's not even I guess I definitely like reading more than most other people do. And so I'll recommend a book that I enjoy that I learned something from and somebody will tell me oh that's boring. And I was like I didn't understand at the time. I was like oh I must have a higher tolerance for boredom because I didn't I didn't find it boring. And so it says it seems curious that the same task could be painful to one person boring is obviously a form of pain to some degree and pleasant to another but I didn't realize at the time what this imbalance implied because I wasn't looking for it. I didn't realize how hard it can be to decide what you should work on bringing this to your attention too because I'm reading from an essay he wrote in January 2015. I started the podcast with an essay he wrote in January 2006. This is almost 10 years different and yet the idea is the same thing. It's like very hard to find out what you should work on but it's extremely important to figure this out. Maybe we should spend more time thinking about it. Maybe we should come up with ways to make it easier for people to do this. So it says how hard it can be to decide what you want to work on and that sometimes you have to figure out from subtle clues like a detective solving a case in a mystery novel. So I bet it would help a lot of people to ask themselves about this explicitly. What seems like work to other people that doesn't seem like work to you? Okay, so let's go to an essay that he wrote in August 2007. It's called How Not to Die. This is one of my favorite essays of his. I have writing all over the thing. So it starts out with, Hey, this is a talk that I gave at the last Y Combinator dinner of the summer. Usually we do not have a speaker at the last dinner. It's more of a party. But it seemed worth spoiling the atmosphere if I could save some of the startups from preventable deaths. So that's why it's called How Not to Die. So at the last minute I cooked up this rather grim talk. I didn't mean this as an essay. I wrote it down because I only had two hours before dinner and I think fastest while writing. And I don't know if it's in this essay or other ones. But what Paul has a great ability to do because think about he's taking something he's thought about for a very long time. Maybe distilled it down to, you know, two pages, sometimes 10 pages. I think one of them, I think the longest one something like 20 pages long. But then he's able to distill that even down further to a line. There's lines that I read that I'll never forget. He's got this idea of running upstairs, which I'll get to later or being hard to kill. It's like he's very gifted at taking complex information and breaking it down on like an aphorism level. So then you can actually carry it with you and remember it whenever you need it in the future. So it says a couple days ago, I told a reporter that we expected about a third of the companies that we funded to succeed. Actually, I was being conservative. I'm hoping it might be as much as half. Wouldn't it be amazing if we could achieve a 50% success rate? Remember, these are all these are very early companies like at the very very beginning. So, of course, you're going to have a ton that just go out of business. Another way of saying that is half of you are going to die. So remember he's talking to a room full of companies that they're trying to help grow. They they all gave initial funding to and then they bundle that with advice and all the other things that white combinator does today. So it says another way of saying that is that half of you are going to die phrase that way. It doesn't sound good at all. In fact, it's kind of weird when you think about it because our definition of success is that the founders get rich. If half the startups we fund succeed then half of you are going to get rich and the other half of you are going to get nothing. So there's a bunch of things that pop to mind when I read that paragraph. The first one comes from Charles DeGaul. I did a podcast on his biography, episode 224. One of my favorite quotes of his was, So Paul Graham's saying, hey, there's a binary outcome here. If a startup succeeds and survives, the founders are going to go rich. If not, they're going to die and get nothing. So all that matters is to survive. The rest is just words. And then made me think of what Warren Buffett says, in order to succeed you must first survive. And it also made me think of what Ed Thorpe said, that you need to avoid ruin at all costs. So at its core the idea that Paul is explaining in this paragraph we've seen over and over again. You got Buffett, Thorpe, DeGaul, all saying the same thing. If you can just avoid dying, you will get rich. This sounds like a joke, but it's actually a pretty good description of what happens in a typical startup. You may have heard that quote about luck consisting of opportunity, meeting, preparation. You've now done the preparation. The work you've done so far has in effect put you in a position to get lucky. You can now get rich by not letting your company die. That is more than most people have. And then he goes back to the grim part. When startups die, the official cause of death is always either running out of money or a critical founder bailing. Often the two occur simultaneously. But I think the underlying cause is usually that they've become demoralized. You rarely hear of a startup that's working around the clock doing deals and pumping out new features and dies because they can't pay their bills and their ISP unplugs their server. And then he gets into a main theme of his essays about just how painful and how difficult it is to create a company. If so many startups get demoralized and fail when merely by hanging on they could get rich, you have to assume that running a startup can be demoralizing. That is certainly true. I've been there and that is why I've never done another startup. And then he goes into the point. It's like knowing that this is going to be painful and going to be difficult. It's helpful. Like it should not be surprising to you. The way you and I have talked about this in the past over and over again is that excellence is the capacity to take pain. That is a fantastic quote from the founder of Four Seasons. If you know it's going to feel terrible sometimes, then when it feels terrible, you won't think ouch this feels terrible. I give up. It feels that way for everyone. Another feeling that will seem alarming, but it's in fact normal in a startup, is the feeling that what that what you're doing isn't working. The reason you can expect to feel this way is what you do probably will not work. Startups almost never get it right the first time. Much more commonly you launch something and no one cares. Don't assume when this happens that you failed. It is that's normal for startups. But don't sit around and do nothing. Iterate. So then he goes into some ideas on how to avoid death. How to avoid your company dying. Let me mention some things not to do. The number one thing not to do is other things. If you find yourself saying a sentence that ends with, but we're going to keep working on a startup, you are in big trouble. Bob's going to grad school, but we're going to keep working on a startup. You may as well just translate it to we're giving up on the startup, but we're not willing to admit that to ourselves. A startup is so hard that working on it cannot be preceded by but. Don't start other projects. Distraction is fatal to startups. And this part was actually interesting on like how to kind of reverse hack your own human psychology so you don't quit. And it's by just not wanting to be embarrassed by other people. One of the most interesting things we've discovered from working on Y Combinator is that founders are more motivated by the fear of looking bad. Than by the hope of getting millions of dollars. So if you want to get millions of dollars, put yourself in a position where failure will be public and humiliating. So he tells this quick story. Of the founders of something called Octopart and somehow one of the founders winds up getting on the cover of Newsweek. With the word billionaire printed across his chest. And so then Paul makes the point. He's like, well, he can't fail now. At least he's not going to give up on his own. He's like everyone he knows has seen that picture. And so it says that at this point he is committed to fight to the death. And he also talks about the change. That shouldn't be laughing, but I completely understand what he's saying here. But the change that this can cause in their demeanor, unfortunately. When we first knew them, they were lighthearted cheery guys. Now when we talk to them, they seem grimly determined. I feel kind of bad that we've transformed these guys from lighthearted to grimly determined. But that comes with the territory. If a startup succeeds, you get millions of dollars. And you don't get that kind of money just by asking for it. You have to assume it takes some amount of pain. And so this whole point is like this public humiliation. He's like it's going to put them in a position to be willing to endure more pain. They're not going to just crawl off and die. And if they could just stay in the game long enough, even if they have to change their idea. They're more likely to succeed. And then he just has a line about them. But I wrote it's really a predictor of success to I think all of us you and I included, right? They're smart. They're working in a promising field and they just cannot give up. And then Paul ends this essay. There's so many times I'm probably repeated on this podcast. Which is like I just love the way he ended this essay and this is just fantastic advice. So I will tell you now bad shit is coming. It always is in a startup. The odds of getting from launch to liquidity without some kind of disaster happening are one in a thousand. So don't get demoralized. When the disaster strikes, just say to yourself, okay. This is what Paul was talking about. What did he say to do? Oh, yeah. Don't give up. Okay. So the next essay I want to talk about is why to start a startup in a bad economy. It was written in October 2008, right? When the great financial crisis, right? And I just think there is specifically, you know, right now it's a weird economic time that just happened to be recording this in. But specifically for technology startups, unfortunately is terrible. At least in comparison to, you know, where things have been in the last few years. And I just think a lot of the ideas like he's going to start this essay saying everybody says it's so terrible. This terrible time for startups in October 2008 and they compare it to the 1970s. And he's like, oh, you mean when Microsoft and Apple were founded? So again, main theme of this podcast is history doesn't repeat human nature does. And so I just I think there's going to be information in here that is valuable to people trying to operate in current day. Okay, and whether it's you listen to this now, you listen to it 15 years from now, recessions, difficult economic times that is, you know, normal, it happens over and over again. In fact, I wish we used to call them if you study like back in the 1800s and early 1900s, they didn't call them recessions and depressions. They called them financial panics, which I think is just a fantastic name, but has nothing to do what we're talking about. So let me jump into the essay. The economic situation is apparently so grim that some experts fear that we may be in for a stretch as bad as the mid 70s when Microsoft and Apple are founded. As those examples suggest a recession may not be such a bad time to start a startup. I'm not claiming it's a particularly good time either. The truth is more boring. The state of the economy doesn't matter much either way. And I love what he's about to say here. There's a reason this podcast is called founders and not companies. I believe in the power of the individual that people make all the difference, right? If we learn one thing from funding so many startups is that they succeed or fail based on the qualities of the founders. The economy is a rounding error compared to the founders. What popped my mind when he said that there are no shortcuts around quality and quality starts with people. That is one of my favorite Steve Jobs quotes. There are no shortcuts around quality and quality starts with people, which means that what matters is who you are, not when you do it. Yes, I just Stop repeating myself. You obviously know I love his writing because I'm doing an entire probably two-part podcast series. This might have to be three parts. Hopefully not. There's just so much to get to. Which means what matters is who you are, not when you do it. If you're the right sort of person you will win even in a bad economy. So if you want to improve your chances you should think far more about who you can recruit as a co-founder than the state of the economy. And if you're worried about threats to the survival, oh my god, this is so good too. And if you're worried about threats to the survival of your company, don't look for them in the news. Look in the mirror. And because Paul's focus is on startups, investors play a large part of that. You'll read his essays. Like what pops up a lot is at least this is my impression and I talked to somebody yesterday that knows more than I do. I don't want to say who it is because it was a private conversation. I didn't ask if I could put it on the podcast, but and I like he he's very familiar with Paul Graham's writing and I was like, what do you think he thinks of venture? Like VC. And he said he doesn't like it. So much so that he like essentially created almost like a new form of it. And in some ways like I'm not really a good person to comment on this because I know nothing about it. All I can say is from reading, you know, spending weeks now reading Paul's words. He just has a lot of criticisms. He's like he sees a lot of bad behavior in like the investor community specifically around private companies. There's a line, I don't know if it's in this one or later, but I came to the realization because he just repeats this in different essays in different ways. I was like, oh like Paul's opportunity with Y Combinator was very similar to Walt Disney's opportunity with amusement parks where Disney's like the reason I have an opportunity to do something really great is because the standard way of doing things left so much room for improvement. And so we get into this right now because he talks about hey, it's we're in a financial crisis right now in 2008. Your big problem is, you know, is not that you're going to start a company. Investors are doing the exact opposite behavior that they should be doing. He says investors are more of a problem. Startups generally need to raise some amount of external funding and investors tend to be less willing to invest in bad times. They shouldn't be. Everyone knows you're supposed to buy when times are bad and sell when times are good. But of course, what makes investing so counterintuitive is that in equity markets, good times are defined as everyone thinking it's the time to buy. You have to be contrarian to be correct and by definition only a minority of investors can be. So just as investors in 1999 were tripping over one another trying to buy into lousy startups, investors in 2009 will presumably be reluctant to invest even in good ones when I got to that line. Made me think of one of my favorite things that Warren Buffett ever said in his shareholder letters. He talks about the difference of like the financial security and like fortress that Berkshire has built. How it's so different to most other people and it allows him to quote we play offense while others scramble for survival. Back to Paul. He says you are going to have to adapt to this but that's nothing new. Startups always have to adapt to the whims of investors. Ask any founder in any economy if they describe investors as fickle and watch the face they make. So then this is absolutely excellent. I love this. This is what I was mentioning earlier how one line is just going to stick in my mind. So he says the way to make a startup recession proof is to do exactly what you should do anyway. Run it as cheaply as possible. For years I've been telling founders that the surest route to success is to be the cockroaches of the corporate world. The immediate cause of death in a startup is always running out of money. So the cheaper your company is to operate the harder it is to kill. Be hard to kill is the metaphor there. Frugality is just a main reoccurring theme in the history of entrepreneurship. I said before if you could search every single like episode of founders I think like the word frugal or frugality might be the most repeated phrase. And I just love the way that Paul put that you should be running you should be doing you how to make your startup recession proof is to do exactly what you should be doing anyways run it as cheaply as possible. The cheaper your company is to operate the harder it is to kill. Another great line here. Another advantage of bad times is that there's less competition. Technology trains leave the station at regular intervals. If everyone else is cowering in a corner, you may have the whole car to yourself. And I love the idea behind this next paragraph. You're an investor too. As a founder you're buying stock with work. The reason Larry and Sergey are so rich is not so much that they've done work worth tens of billions of dollars, but that they were the first investors in Google. And like any investor you should buy when times are bad. And then he goes back to the theme that really it's always the people that matter and this is how he ends the essay. So maybe recession is a good time to start a startup. It's hard to say whether advantages like a lack of competition outweigh disadvantages like reluctant investors, but it doesn't matter much either way. It's the people that matter and for a given set of people working on a given technology the time to act is always now. Okay, I want to move on to his essay called Relentlessly Resourceful. The note I put at the very top of this page is this is one of those ideas that once it gets in your head it never lets you go. I finally got a good startup founder down to just two words. Relentlessly resourceful. Till then the best I managed was to get the opposite quality down to one. hapless. hapless implies passivity. To be hapless is to be battered by circumstances. To let the world have its way with you instead of you having your way with the world. It's not hard to express the quality we're looking for in metaphors. The best is probably a running back. A good running back is not merely determined but flexible as well. They want to get downfield, but they adapt their plans on the fly. I have figured out how to express this quality directly. I was writing a talk for investors and I had to explain what to look for in founders. What what would someone who was the opposite of hapless be like? They'd be relentlessly resourceful. Not merely relentless. That's not enough to make things go your way except in a few mostly uninteresting domains. In any interesting domain the difficulties will be novel. Which means you cannot simply plow through them. So you have to be resourceful. You have to keep trying new things. Be relentlessly resourceful. Resourcefulness implies the obstacles are external, which they generally are in startups. Relentlessly resourceful is the recipe for success. I think that is the best short description we'll find of what makes a good startup founder. I doubt it could be made more precise. You can even use it use it tactically. If I were running a startup this would be the phrase I would tape to the mirror. Make something people want is the destination. But be relentlessly resourceful is how you get there. Okay, so the next essay I want to go over is called the anatomy of determination. There's actually I'll leave it in the show notes. I have um, I have like uh personal notes on like 300 I think it was like 300 podcasts and lectures on entrepreneurship. According to this I took these notes in September 26, 2018. It's a conversation on the Y Combinator podcast with Paul Graham. Just going to read this highlight that I think I've mentioned to you a few times, but I think reading it up front will give you an idea of like what this essay is about and Paul's perspective. And again, I think it's really interesting something you and I talked about repetition is persuasive. You have to be prepared in your company. It's like you have a core set of beliefs and ideas. You're gonna have to repeat them for decade after decade. Jeff Bezos, David Ogilvy, Warren Buffett, Steve Jobs. They all do this. You see Paul doing it here because the essay I hold in my hand is written in September 2009. And I think this this uh conversation with him. Let me see. I took notes on it 2018. It was published August 31, 2018. So almost 10 years apart from when he's writing this essay to again saying repeating an idea about why he feels it's more important to be determined than smart. So he says it turns out it is much more important to be determined than smart. If you imagine this hypothetical person that is 100 out of 100 for smart and 100 out of 100 for determination and then you start taking away determination. It doesn't take very long until you have this ineffectual but brilliant person. Whereas if you take someone who's super determined and you take away smartness, eventually you'll get to a guy who owns a lot of taxi medallions or a trash hauling business, but it's still rich. Important note. It only takes one person of the founding team to be super determined. So I will leave this if you're curious if you want to read my through my notebook. And I've started adding to it. I kind of like left alone for like a year or two or something like that. But now I've been slowly adding more notes to it. Anyways, the link will be down below. So let's get to the essay. He says we spend a lot of time trying to learn how to predict which startups will succeed. We learned quickly that the most important predictor of success is determination. At first we thought it might be intelligence. Everyone likes to believe that's what makes startups succeed. It makes a better story that a company won because its founders were so smart. While it certainly helps to be smart, it's not the deciding factor. There are plenty of people as smart as Bill Gates who achieve nothing. In most domains, talent is overrated compared to determination. And then I love this line, after a while, determination starts to look like talent. And another great line, I cannot think of any field in which determination is overrated. And then he continues. This is the next page. The simplest form of determination is sheer willfulness. When you want something, you must have it no matter what. A good deal of willfulness must be inborn because it's common to see families where one sibling has much more of it than another. I don't think there's much you can do to make a weak-willed person stronger-willed. Being strong-willed is not enough. You also have to be hard on yourself. Someone who was strong-willed but self-indulgent would not be called determined. Determination implies your willfulness is balanced by discipline. That word balance is a significant one. So this is where it really gets into, like you really have to pay attention to what he's saying. The stronger your will, the less anyone will be able to argue with you except yourself. And someone has to argue with you because everyone has base impulses. And if you have more will than discipline, you will just give into them. And a way to think about that on a more simple basis is this next line, the more willful you are, the more dangerous it is to be undisciplined. And then this next paragraph I wrote down, this is a very novel thought. This may be why high levels of achievement are so difficult to maintain over a long period of time. The dangers of indiscipline increase with temptation. If you're sufficiently determined to achieve great things, this will probably increase the number of temptations around you. That's a very interesting idea. I'm going to read the whole thing again. The dangers of indiscipline increase with temptation. If you're sufficiently determined to achieve great things, this will probably increase the number of temptations around you. Okay, so then he goes into the role that ambition plays in all of this. So far he's been talking about determination and willfulness and then discipline. Then he says there's one other major component of determination, ambition. If willfulness and discipline are what gets you to your destination, ambition is how you choose it. Ambition seems to be quite malleable. There's a lot you can do to increase it. This is a very excellent point. I'm going to, in all of his essays, he leaves footnotes. So I'm going to read this paragraph and I'm going to read the footnote right after it. Ambitious people are rare. So if everyone is mixed together randomly, as they tend to be early in people's lives, then the ambitious ones won't have many other or many ambitious peers. When you take people like this and you put them together with other ambitious people, so that is another main theme of Paul's essays, is the importance of founders, ambitious people in general, to be around other people like them. So a huge component of YC is like that they're constantly getting together. There's like a community around them. He talks about like being in like either in the same city as people or in like physical events. He just that's it is very I don't even know why I say surprising, but it was surprising how much he mentions this idea. It's like there's a huge benefit to being around people and that are like you because being a founder and being interested in this stuff is weird. And it also in this case what he's about to tell us here is like it just it takes you up another level, right? So it says when you take people like this and put them together with other ambitious people they bloom like dying plants given water. Fantastic writing. Probably most ambitious people are starved for the sort of encouragement that they would get from ambitious peers, whatever their age. And so this is the footnote on that paragraph which means one of the best ways to help a society generally is to create events and institutions that bring ambitious people together. It's like pulling the control rods out of a reactor. The energy they emit encourages other ambitious people instead of being absorbed by the normal people that they're usually surrounded with. What I wrote here and I don't know if I'll do this idea, but I wonder if there's like a benefit to having like an in-person version of Founders Podcast. Because Paul is telling us right here is like one of the best ways to help society generally create events and institutions that bring ambitious people together. I'd have a hard time understanding why somebody that's not ambitious would be even listening to this. Back to Paul. Achievements also tend to increase your ambition. So here in Psalm is how determination seems to work. See this is what I mean about he just takes this unbelievably complicated idea and yet like you finish reading this paragraph like okay, I have a better deeper understanding of what it means. Like what does discipline mean? What does determination mean? How does it all relate together? I don't think I would have been able to come up with this on my own. Even if you kind of understand on like a subconscious level and it helps to me helps me a lot seeing it written, you know on a page. So here in Psalm is how determination seems to work and consists of willfulness balanced with discipline aimed by ambition. And fortunately at least two of these qualities or two of these three qualities can be cultivated. You may be able to increase your strength of will somewhat. You can definitely learn self-discipline and almost everyone is practically malnourished when it comes to ambition. And he's tying this all into achievement right and he goes back to that main theme. It's like man, how do you do what you love because you're just going to go so so much deeper and so much further automatically, right? There's a third factor in achievement. How much you like the work. If you really love working on something you don't need determination to drive you. It's what you would do anyway. Okay, so now this this essay is going to take a while some time to get through. It is called what startups are really like. It was written in October 2009 and Paul says this is an essay derived from a talk at the 2009 startup school. And so he's like I wasn't sure what to talk about. So I decided to ask the founders of the startups that we had funded what I had not written about yet. And as a way to find good ideas, he sends an email. He says I've sent all the founders an email asking what surprised them about starting a startup. And so I'm just going to run through some of the highlights that really jumped out at me before he gets into the list. Number one is be careful with co-founders, which I'll get to in a second. But the paragraph before that was interesting. He says there were very clear patterns in the responses. It was remarkable how often several people have been surprised by exactly the same thing. So I pull that out because I feel like I discover the exact same phenomenon by reading hundreds of biographies of entrepreneurs, right? And you hear this because sometimes I get excited. It's like I just flip my, like I kind of lose my shit because it's extremely exciting when some of the most formidable people in history that did not know each other, that did not, weren't even alive at the same time, worked in different industries, lived in different parts of the world and they came to the same conclusion through trial and error and building their company and doing their work. And so it's again, Paul has like this, almost like if you ever played video games, like I don't know if they said this, but when I was a kid, there was like this God level view, right? Where you could see everything going on in the game. I think Paul has a lot of that because he's just, he's thousands of, very few people are going to be exposed to the same stuff he is, right? So he's like there's very very very clear patterns in the responses. It's remarkable how often several people have been surprised by exactly the same thing. Number one, be careful with co-founders. This was the surprise mentioned by the most founders. Think about that. That is crazy. What people wish they paid more attention to when choosing co-founders was character and commitment, not ability. I think Paul says it here, but if not, the best way I heard to describe it's like you pick your co-founder like you'd pick somebody you're going to get married to. It's not like a light decision, right? What people wish they paid more attention to when choosing co-founders was character and commitment, not ability. This was particularly true when the startups, with the startups have failed. The lesson, don't pick co-founders who will flake. Here is a typical response. So you have Paul writing. I'll tell you when it's Paul speaking and then in the essay he has quotes from these emails that he got back from the founder. So this is an example. This is, he doesn't tell you who the founder is, but he tells you what they said. You haven't seen someone's true colors unless you've worked with them on a startup. So then Paul says we've learned this lesson a long time ago. If you look at the YC application, there are more questions about the commitment and relationships of their founders than their ability. Paul continues. Founders of successful startups talked about how hard they work to maintain their relationship. This is an excerpt from an email that Paul includes about a founder answering this question. And this founder says, One thing that surprised me is how the relationship of startup founders goes from a friendship to a marriage. My relationship with my co-founder went from just being friends to seeing each other all the time, fretting over the finances and cleaning up shit. And the startup was our baby. I summed it up once like this. It's like we're married, but we're not fucking. Back to Paul. Several people use the word married. It is far more intense relationship than you usually see between co-workers. So this relationship has to be built of top quality materials and carefully maintained. It is the basis of everything. So when I got to this section, it made me think of this text conversation. So I became friends through the podcast with this founder. He's actually a two-time founder, YC founder. His name is John Coogan. He's also my favorite educational YouTuber. He makes excellent videos. I'll link below with one that I've probably sent to a dozen people. It's called the entire history of Silicon Valley. But anyways, John texted me because he was working on a video. He's got this idea. And he was asking about like is there historical precedence of two successful founders working together on a new project after an acquisition? And based on his research, he said it seems like it always failed. And I went through every single episode. Like the episode title is just trying to see if I could come up with anything. So I'm just going to read you this long text like thought that I sent him. And it's not specific to founders. One founder buying another company's another founder's company and then working together. It's kind of clear theme in the history of entrepreneurship. And it says my initial guess is no because it tends to evolve into one clear main founder. And even if the co-founder or the partner stays, it's usually and it's clearly in a subordinate role. I immediately think of Andrew Carnegie and Henry Clay Flick both two super successful founders. Andrew buys Henry's company. The episode 73 is on this. What happened? I go episode 73 is on a book called meet you in hell about their partnership and then their bitter bitter lifelong rivalry. Years after their fight meet you in hell the title comes from Andrew. You know, they're like hey, we're both old men. Let's bury the hatchet and Henry Clay Frick was not having it wrote him back a letter. He's like, nope, we're not squashing the beef and I'll meet you in hell. And then I just go through like all these examples. Henry Ford bought out all of his investors. Steve Jobs was in complete control as was Edwin Land. Rockefeller had partners, but they all deferred to him and he owned the most equity. J.P. Morgan ran his entire show. Same with Jay Gold and Cornelius Vanderbilt. Wilbur Wright was clearly the main founder of the Wright brothers. Sam Walton and Jeff Bezos and Enzo Ferrari and Estee Lauder. Clearly the main person running their companies. I can't even think of many acquisitions that go well. Trader Joe sells and gets kicked out of his company. Paul Orfala sells to Kinko's, sells Kinko's to FedEx and hates it and won't even go into the store anymore. Henry Leland sells to Cadillac, sells Cadillac to the founder of GM and then leaves to start Lincoln Motors and then sells to Henry Ford. Leland didn't like either acquisition. I just went through 200 episodes and I can't find one. And so back to Paul's point here. Hey, he's seeing it over and over again. It's extremely hard to pick a good co-founder. It's extremely hard to stay together. It's a very important decision. Take your time with it. I think is what Paul's point and then once you do make the decision, make sure you spend a lot of time maintaining that relationship because what he says it's the basis of everything. Next main theme from these emails. Startups take over your life. Running a startup is not like having a job or being a student because it never stops. And this is what the email says. I didn't realize it would spend almost every waking moment either working or thinking about our startup. You enter a whole different way of life when it's your company versus working for someone else's company. And then Paul says in the best case total immersion can be exciting. Here's an example of that. It's surprising how much you become consumed by your startup. In that you think about it day and night, but never once does it feel like work. So I mentioned to you before I have all these weird ways to brainwash myself. These videos I watch these clips I watch over and over again these quotes I save on my phone. One of them is Conor McGregor talking about total immersion at the beginning of his career. It's a fantastic documentary on Netflix. I think it's called like notorious or something like that. And it shows Conor McGregor when he was on welfare. He was living with his parents couldn't pay his bills and you know, he just keeps saying he's like I'm gonna make it. I'm gonna dedicate my entire life. I'm not gonna think about anything else like and he was like talk about visualization. He's just like I know I'm gonna be champion one day. I know I'm gonna have more money than I know what to do with. I'm gonna be able to take care of my entire family. And it's crazy because he's saying these things when he's going he's like leafing through mail and it's like, you know bill collector after bill collector after bill collector. And so one quote that I saved from Conor McGregor this video says again how he used essentially this idea of total immersion and whatever you do, you've got to be a little bit gone to it. You are not all there. You've got to be almost insane to your craft. Not a lot of people can understand that. That's why I don't know about anything else. I do not pay attention to nothing else. Normal society is like let's talk about this. He's talking about like sports current events stuff like that. So he says normal society is says let's talk about this. Let's engage in this. I can't do it. People are talking to me and in my head I'm deep in a sequence on the mat meaning training for fighting right. They're trying to talk to him about current events and sports and in his mind he's just like what's the sequence? What do I have to do next? He goes people are talking to me in my head. I'm deep in a sequence on the map. I cannot pay attention to nothing else. And that's difficult too because I think that's the natural like inclination for a lot of people are running their companies. And when you have kids you have a family like I mean a lot of large part of founders podcast is us watching these incredibly intelligent incredibly formidable people mess this area of their life up. They can't turn it off. And it's probably easier to fall into that trap with the last line of that email. It's like well never once does it feel like work. Next reoccurring theme is it's an emotional roller coaster. You and I have talked about that ad nauseum. In a startup things seem great one moment and hopeless the next. This is an email from a founder. The emotional ups and downs were the biggest surprise for me. One day we think of ourselves as the next google. The next we'd be pondering how to let our loved ones know of our other other failure and on and on and on. Next theme it can be fun. This is Paul speaking. The good news is the highs are also very high. And what founders tend to like is like most is the freedom. This is what one of the founders said. I'm surprised by how much better it feels to be working on something that is challenging and creative and something I believe in. Next theme persistence is the key. A lot of founders were surprised at how important persistence was in startups. A quote from an email. Everyone said how determined and resilient you must be. But going through it made me realize that the determination required was still understated. Back to Paul and also by the degree to which persistence alone was able to dissolve obstacles. When I got to this part, this is when I wrote Paul has said determination was a better predictor of success than intelligence. I already read that to you earlier. So this is an email. It says if you are persistent even problems that seem out of your control seem to work themselves out. Several founders mentioned specifically how much more important persistence was than intelligence. This is an example of that. I've been surprised again and again by just how much more important persistence is than raw intelligence. Remember the name of this essay is what startups are really like. Number six think long term. You need persistence because everything takes longer than you expect. A lot of people were surprised by that. Founder says I'm continually surprised by how long everything can take. Paul says one reason founders are surprised is that because they work fast they expect everyone else to. And then another reason they're surprised by how long everything takes is because a lot of them are overconfident. I think the reason most founders are surprised by how long it takes is that they're overconfident. They think they're going to be an instant success like YouTube or Facebook. You tell them only one out of a hundred successful startups has a trajectory like that and they think yep, we're going to be that one. And so then Paul says maybe they'll listen to one of the more successful founders. This is what one of the more successful founders told Paul. The top thing I didn't understand before going into it is that persistence is the name of the game. It's going to be a really long journey. Number seven is lots of little things. I really like what this founder says here grind over glamour. Paul says we often emphasize how rarely startups win simply because they hit on some magic idea. I think founders have now gotten that into their heads. But a lot we're surprised to find this also applies within the startup. You have to do a lot of different little things. This is an email from a founder. It is much more of a grind than glamorous. You will more likely find me tracking down a bug rather than having a brilliant than having brilliant flashes of some strategic insight. Another email from a founder I learned never to bet on any one feature or deal or anything to bring you success. It's never just a single thing. Everything is just incremental and you just keep going. You just keep doing lots and lots of these little things until you strike something. Number eight start with something minimal. You should release fast and iterate. It is a it is practically a mantra at why Combinator, email from a founder, build the absolute smallest thing that can be considered a complete application and ship it. Number nine engage users. Just one sentence here and I think Estee Lauder was a master at this. Product development is a conversation with the user. So again, Estee Lauder, if she's the example that comes to mind when I think about just how to interact with your customers, how to do things that don't scale. If you don't know what I'm talking about and why Estee Lauder is a master at this listen to episode 217. That is by far one of my most popular episodes. I have a ton of people that have told me they listen to it multiple times. The next one is change your idea. Paul says we've always encouraged founders to see a startup idea as a hypothesis rather than a blueprint. Mere determination without flexibility is a greedy algorithm that may get you nothing more than a mediocre local maxim. And so one of the founders emailed Paul said when someone is determined there's still a danger that they'll follow a long hard path that ultimately leads nowhere. One founder put it very succinctly fast iteration is the key to success. And then Paul says experienced founders learn to keep an open mind. This is a an excerpt from an email on that. I don't laugh at ideas anymore because I realized how terrible I was at knowing if they were good or not. You can never tell what will work. Number 11 is don't worry about competitors. This made me think of one of my favorite Edwin Land quotes that I've been repeating a lot lately that the best way to keep a secret is to shout out from the rooftops. When you think you've got a great idea, it's sort of like having a guilty conscience about something. All someone has to do is look at you funny and you think oh my god, they know. Those alarms are almost always false. One reason people overreact to competitors is that they overvalue ideas. If ideas really were the key a competitor with the same idea would be a real threat, but it's usually execution that matters. Paul actually has a great way to describe this in that talk from the Y Combinator podcast I referenced earlier when he was talking about hey, this is why determination is more important than intelligence. He also talks about it's like just focus on your customer not your competition. And he says what makes companies fail most of the time is poor execution by the founders. A lot of times founders are worried about competition. YC has founded 1900 plus companies at the time. This is several years ago. One was killed by competitors. You have the same protection against competitors that light aircraft have against crashing into other light aircraft. Do you know what that protection is? Space is large. A lot of founders complained about how hard it was to get users. This is a complicated topic. When you can't get users, and another way to think about this when you can't get customers, it's hard to say whether the problem is lack of exposure or whether the product is simply bad. The sharpest criticism of YC came from a founder who said we did not focus enough on customer acquisition. This is what the founder said. YC preaches make something people want. There is very little focus on the cost of customer acquisition. And that's actually something I learned from Steve Jobs because he talks a lot about the importance of product, the importance of talent. But if you saw how he spends his time too, he talked about the importance of marketing and then having innovations in not only marketing but in product marketing and distribution. I remember reading something from him and the note I left myself was because he talked about he wants every single person in the world to have an Apple device and to do that Apple must not only make great products, but they must become a great marketing company. And they weren't at the time he was saying this, right? And the way I interpreted what he was saying in the context of that book was if you believe your product will improve the life of your customer, then you have a moral obligation to get good at marketing. Number 13. This is actually repeated a few times through different essays. Expect the worst with deals. Deals fall through. That is a constant of the startup world. Startups are powerless. And they also apply not only to deals with bigger companies, but they say this applies to investors too. This is a founder's email about dealing with an investor. In retrospect, it would have been much better if we had operated under the assumption that we would never get any additional outside investment. That is something that Paul repeats a lot. In fact, let me get to this right now. So I don't forget to bring it up. Somebody asked him if you were 22 years old or just graduated college today, what would you do with your life? And I think this applies to more than just 22 year olds, but he says, If I were starting a startup, I would certainly apply to YC, which is not that surprising since it was designed to be what I wish I had had when I did start one. But assuming I got in, I would not get sucked into raising a huge amount on demo day. Okay, and so this is what he would do if he was starting a company now. I would raise maybe $500,000. I'd keep the company small for the first year. I would work closely with users to make something amazing, and otherwise I would stay off of Silicon Valley's radar. In other words, I'd be the opposite of a scene star. Ideally, I would get to profitability on that initial $500,000. Later, I could raise more if I felt like it. Or not, but it would be on my terms. At every point, this is I think the part I actually found most interesting personally, at every point in the company's growth, I'd keep the company as small as I could. I'd always want people to be surprised by how few employees we had. Fewer employees equal lower costs and less need to turn into a manager. And so that popped to mind when you have this email from the founder saying it would have been much better if we had operated under the assumption that we would never get any additional outside capital. And so then Paul adds on to that, my advice is generally pessimistic. Assume you won't get money. And if someone does offer you any, assume you'll never get any more of it. And then he talks about, hey, founders don't take this advice. They don't listen to me. Why do founders ignore me? Mostly because they're optimistic by nature. The mistake is to be optimistic about things you can't control. That is excellent. So that's why his whole point is like you need to be in charge of your own destiny. And then once you're in there, you have a lot more options and you get to pick and choose what's best for you and your company. Number 14, investors are clueless. A lot of founders mentioned how surprised they were by the cluelessness of investors. This is one what founder said, they don't even know about the stuff they've invested in. I met some investors that had invested in a hardware device. And when I asked them to demo the device, they had difficulty switching it on. And then another founder says investors don't know half the time what they're talking about. A few are great, but 95% of the investors we dealt with were unprofessional. They didn't seem to be very good at business or have any kind of creative vision. They said angels were generally much better to talk to. Number 15, you may have to play games. One founder said the thing that surprised him most was quote, the degree to which feigning certitude impressed investors. I don't think this just works with investors. I think it works in human nature. Something that Nolan Bushnell, who's the founder of Atari and Steve Jobs mentor, picked up on. He hired Steve when he was like 19 years old to work at Atari. And he's one of the some of the advice that he gave Steve was he says, I taught him that if you act like you can do something, then it will work. I told him pretend to be completely in control and people will assume that you are. Number 16, luck is a big factor. If you think about famous startups, it's pretty clear how big a role luck plays. Where would Microsoft be if IBM insisted on an exclusive license for DOS? Paul makes that point with with Bill Gates specifically a few times where he's like listen without that. Yeah, Bill Gates is smart. He'd be unbelievably rich. But the reason he's at the top of the world's richest people list is because of this things that were like mistakes that IBM made and he obviously capitalized and executed on well, but he goes he still would have been rich. He just would have been further down the list. Paul's got a fantastic, he actually has a great way to put this. He has this and it's eventually I'm going to get to the essay. I don't know if I'll get into this episode or the next one, but it's called how to make wealth and he describes the role of luck in in company building. He says there is a large random multiplier in the success of any company. And so then he goes back to this. He says actually the best model would be to say that the outcome is the product of skill, determination and luck. Number 17, the value of community. This is something he repeats in different variations throughout all the like a bunch of different essays. This is one of the founders saying the benefit of the community that YC provides founders the immense value of peer group of YC companies and that are all facing or sorry the immense value of the peer group of YC companies and facing similar obstacles at similar times. That is why I actually think like obviously it's very valuable in person. So why my number one recommendation, my number one book recommendation is Against the Odds. An autobiography by James Dyson. The last time I read it, I read it a few times. It was episode 200 because I think James can serve as like a mentor in a historical context about how difficult and lonely the job of the founder could be. So I think it's like you're going to find that reading that book, there's a lot of good information on company building in there, but I think you'll find it comforting. Like oh, okay. It's I'm not the way I feel and the difficulty I'm going through and the pain I'm enduring is not unique to me. And then Paul talks about the value of community. It's like one of the reasons he likes being part of the world because of this world is because even as people get super successful, they're still trying to help. I think Bob Noyce, the founder of Intel, talked about this the best. I think he said something like after he got successful as an entrepreneur, he tried to help and mentor a bunch of people. He mentored, you know, Steve Jobs, he mentored Nolan Bushnell, a bunch of other founders, and he said something. It was like restocking the fish or restocking the stream that I fished from. I think is the way he put it. So Paul says this is one of the reasons I like being part of this world. Creating wealth is not a zero-sum game. So you don't have to stab people in the back to win. And then what I love about how he ends not only this essay, but another one, he's like listen, this is very complicated, difficult, and a lot of this you're just not going to be able to get until you actually do it. And so he calls this part the super pattern and it's really about why people don't listen to the advice that he gives, right? One's first thought when looking at them, meaning all these problems that people were into, like what running startups are like, one's first thought when looking at them all is to ask if there's a super pattern, a pattern to the patterns. I saw it immediately. These are supposed to be the surprises, the things I didn't tell people. What do they all have in common? They're all things that I tell people. And he gets to the heart of the matter right here. People just don't seem to get how different it is until they do it. Okay, let's jump to another essay. It's called a word to the resourceful. This is fantastic and it fits on like a page and a half. He says, I noticed a pattern in the least successful startups that we funded. They all seemed hard to talk to. It felt as if there was some kind of wall between us. I could never quite tell if they understood what I was saying. What was surprising is what comes next, where he compares the opposite of this, and this is not what you'd expect it to be. The opposite to be, again, a word to the resourceful. This is what it's talking about. This caught my attention because earlier we noticed a pattern among the most successful startups, and it seemed to hinge on a different quality. We found the startups that did the best were the ones with the sort of founders about whom we'd say they can take care of themselves. The startups that do the best, and as a for the proxy that you and I are using this for here, is like the kind of founders that we want to be, right? So it's like the startups that do the best, the founders that are the best, right? So it says the startups that do the best are fire and forget it in the sense that all you have to do is give them a lead and they'll close it, whatever type of lead it is. So I just want to go over one line in that paragraph. Again, we found the startups that did the best were the ones with the sort of founders about whom we'd say they can take care of themselves. It seemed odd that the outliers at the two ends of the spectrum, which is failure and success, right? Could be detected by what appeared to be unrelated tests. This is why exactly, that's exactly what I thought when I was reading this. It's like, oh, that's odd. What's going on here? You'd expect that if the founders at one end were distinguished by the presence of quality x, at the other end they'd be distinguished by the lack of x. Was there some kind of inverse relation between resourcefulness and being hard to talk to? It turns out there is, and the key to the mystery is the old adage, a word to the wise is sufficient. If someone is wise, all you have to do is say one word to them and they'll understand immediately. You don't have to explain in detail. They'll chase down all the implications. He doesn't say this, but the way I think about what he's saying is they'll chase down all the implications on their own. Back to Paul. In much the same way that all you have to do is give the right sort of founder a one-line intro to a VC and he'll chase down the money. Understanding all the implications is a subset of resourcefulness. That is a really unique thought and this is where, this is why Paul's writing makes you feel something. Paul's writing evokes emotion. It's just like, wait a minute, and in the same way that all you have to do is give the right sort of founder a one-line intro to a VC and he'll chase down the money and then the punch line right here is so fantastic. Understanding all the implications is a subset of resourcefulness. That is the description of the successful founders. Then he ties it back to, okay, so what are the unsuccessful founders doing wrong and therefore you and I can be like, okay, what do we want to avoid? A better way to describe the situation would be to say that the unsuccessful founders had a sort of conservatism that comes from weakness. They traversed idea space as gingerly as a very old person traverses the physical world. Again, not only is he, his writing evokes emotion, but he immediately puts, you read that in your mind's eye, you see an old person like with a cane and a hunchback, right? So let me go over that. A better way to describe the situation would be to say that unsuccessful founders had a sort of conservatism that comes from weakness. They traversed idea space as gingerly as a very old person traverses the physical world. And so he goes back to this. He's going to end the essay right here and hopefully this makes sense. So being hard to talk to was not what was killing the unsuccessful startups. It was a sign of an underlying lack of resourcefulness. That is what's killing them. A lack of resourcefulness. As well as failing to chase down the implications of what was said to them, the unsuccessful founders would also fail down to chase funding and users and our customers, whatever, and source of new ideas. But the most immediate evidence I had that something was amiss was that I couldn't talk to them. Okay, so now we got to one of my absolute favorite essays of his called Do Things That Don't Scale. And so he writes, A lot of would-be founders believe that startups either take off or don't. You build something, make it available, and if you made a better mousetrap, people beat a path to your door just as promised. Or they don't, in which case the market must not exist. Actually, startups take off because the founders make them take off. I had to double underline that one. That one's fantastic. So actually, startups take off because the founders make them take off. The most common unscalable thing founders have to do at the start is to recruit users manually. Nearly all startups have to. You cannot wait for users to come to you. So he's always going to use the word users. Obviously, we could think about that as customers as well. Okay, you have to go out and get them. Stripe is the most successful startup we funded and, or is one of the most successful startups we funded, and the problem they solved was an urgent one. If anyone could have sat back and waited for users, it was Stripe. I love this story. I've mentioned this story on past podcasts a few times too. But in fact, they're famous for aggressive early user acquisition. So they have a term. He says at YC we use the term Collison installation. Collison is the last name of the two brothers that founded Stripe. Okay, so it says at YC we use the term Collison installation for the technique they invented. More diffident founders, meaning more default passive founders, right, would ask will you try our beta? And if the answer is yes, they'll say great, we'll send you a link. But the Collison brothers were not going to wait. When anyone agreed to try Stripe, they'd say right. They would say right then, give me your laptop, and they would set them up on the spot. That is the Collison installation that's fantastic. For a startup to succeed, at least one founder will have to spend a lot of time on sales and marketing. When I got to that section, made me think of one of my favorite quotes from the book Zero to One by Peter Thiel. Superior sales and distribution by itself can create a monopoly, even with no product differentiation. The converse is not true. That's crazy. And true. Superior sales and distribution by itself can create a monopoly, even with no product differentiation. That's how important this is, right? The converse is not true. The other reason founders ignore this path is that the absolute number seems so small at first. This is why, again, I've already said it, I don't know, probably twice so far, you got to go back and study Estee Lauder. She was a master at this. Everywhere she'd go, she would offer to on an individual basis, right? She's sitting on a train, sitting on a bus, wherever she's at, she's like, hey, she sees a woman sitting there. Hey, do you mind if I do your makeup? If I beautify you? Or I forgot the term she uses. And she would do like a one-on-one, you know, maybe five, ten minutes. I don't even know how long it took. And then what would happen is, she did at the beginning, you know, when he's saying you have to do things that don't scale. One-on-one, like make- makeovers, just definitely not, that's a definition of things that doesn't scale, right? But it does scale with time because she would say decades later, she would still be getting cards and letters in the mail from people that she took the time on an individual basis to provide a service for that are still customers. So think about that, like she recruited a user, a customer on a- on a bus 30 years earlier. That person is still a client of hers, still a customer of hers, still sending her information, or still sending her communication and letters and things. How many other people did that one customer recruit for Estee Lauder over three decades? Dozens, if not hundreds, if you could actually track it, maybe even thousands, right? If you think about everybody they recruit and who they recruit and so on and so forth. And that's the point, it's like it looks like it doesn't scale. But if they like what you do, it does, as long as you're willing to stay in the game long enough. I love this essay, back to this. The other reason founders ignore this path is that absolute number seems so small at first. Estee Lauder, she didn't say, oh, I can't do this because if- if I do it for one person, I shouldn't be doing things for one person, I should be doing things for a thousand at a time. Well, maybe that one person gets you a thousand customers over time, right? You are doing it for a thousand. It just doesn't- it's just not obvious at the point, at the time. This can't be how the big famous startups got started, they think. The mistake they make is to underestimate the power of compounding growth. We encourage every startup to measure their progress by weekly growth rate. And so his point here and what I wrote in the margin is humans do not understand this intuitively. We encourage every startup to measure their progress by weekly growth rate. If you have a hundred users, you need to get 10 next week, 10 more next week to grow 10% a week. And while 110 might not seem much better than 100, if you keep going at 10% a week, you'll be surprised how big the numbers get. After a year, you'll have 14,000 users and after two years, you'll have 2 million. Almost all startups are fragile initially, and that's one of the biggest things inexperienced founders and investors, and reporters and know-it-alls, he lists a bunch of people here, get wrong about them. They unconsciously judge larval startups by the standards of established ones. They're like someone looking at a newborn baby and concluding there's no way this tiny creature could ever accomplish anything. The question, oh, this is so fantastic. The question to ask about early stage startups is not is this company going to take over the world, but how big could this company get if the founders did the right things? And the right things often seem laborious and inconsequential at the time. That is such a good line. He's going to reference something that I talked about on Founders 140, which is the best Bill Gates biography that I've read so far, because it covers just the first 35 years of his life. That's episode 140 if you haven't listened. So it says the right things can often seem laborious and inconsequential at the time. Microsoft cannot seem to be very impressive when it was just a couple of guys in Albuquerque writing basic interpreters for a market of a few thousand hobbyists, as computer users at the time were called. But in retrospect, that was the optimal path to dominating microcomputer software. So skipping ahead a little bit, he's like, listen, you should really instead of trying to go wide delight, get a few people to really love you than a bunch of people to kind of like you. You should take extraordinary measures, not just to acquire users, but also to make them happy for as long as they could, which turned out to be surprisingly long. This company called WooFoo. WooFoo sent every new user a handwritten thank you note. The first users should feel that signing up with you was one of the best choices they ever made. And you in turn should be racking your brains to think of new ways to delight them. And then just more great advice here. Another reason founders don't focus enough on individual customers is that they worry it won't scale. But when founders of larval startups worry about this, I point out that in their current state, they have nothing to lose. Maybe if they go out of their way to make existing users super happy, they'll one day have too many to do so much for. See if you can make that happen. And the fact that you can delight customers on a one by one basis when you're just starting out is actually an advantage that big companies do not have. Tim Cook of Apple doesn't send you a handwritten note after you buy a laptop. He can't. But you can. That's one advantage of being small. You can provide a level of service no big company can. And this is fantastic. I never thought about this. I was trying to think of a phrase to convey how extreme your attention to users should be and I realized Steve Jobs had already done it. Insanely great. Steve wasn't just using insanely as a synonym for very. He meant it more literally. That one should focus on quality of execution to a degree that in everyday life would be considered pathological. And he's going to give some advice on how you go about doing this. Sometimes the right unscalable trick is to focus on a deliberately narrow market. That's what Facebook did. At first it was just for Harvard students. In that form, it only had a potential market for a few thousand people. But because they felt it was really for them, a critical mass of them signed up. When I interviewed Mark Zuckerberg, he said that while it was a lot of work creating course lists for each school, doing that made sure made students feel that the site was their natural home. And then he gives some ideas not only for people writing start software, but for physical products as well. For hardware startups, there's a variant of doing things that don't scale that we call pulling a Meraki. They got started, that's the name of the company, they got started by doing something that really doesn't scale. They assembled their routers themselves and they had to do that because the minimum order for a factory production run is usually several hundred thousand dollars. And so they had to put these things together and it was interesting what he's about to say here is like doing things that don't scale is actually a form of education. Doing things that don't scale is a form of education. Fabricating things yourself turns out to be valuable for hardware startups. You can tweak the design faster when you're when you are the factory and you learn things you would never have known otherwise. And then he says you can use consulting like techniques to actually learn more and to do things that don't scale. What I wrote, this is a long paragraph. I'm just going to read to you what I wrote first. This is great. All of this centers on learning how to better serve your customer. Another consulting like technique for recruiting initially lukewarm users is to use your software yourselves on their behalf. We did this at VIAweb or we did that at VIAweb. When we approached merchants asking if they wanted to use our software to make online stores, some said no, but they let us make one for them. Since we would do anything to get users, we did. We felt pretty lame at the time. Instead of organizing big strategic e-commerce partnerships, we were trying to sell luggage and pens and men's shirts. But in retrospect, it was exactly the right thing to do because it taught us how it would feel for merchants to use our software. Sometimes the feedback loop was instantaneous. In the middle of building some merchant site, I'd find I needed a feature that we didn't have, so I'd spend a couple hours implementing it. And then I'd resume building the site. And then he gives some anti-advice, which is he's not a big believer in the big launch. I should mention one sort of initial tactic that usually doesn't work. The big launch. Occasionally meet founders who seem to believe startups are projectiles rather than powered aircraft. Powered aircraft is a great visual for a startup. Occasionally meet founders who seem to believe startups are projectiles rather than powered aircraft and that they'll make it big only if they've launched with sufficient initial velocity. It's easy to see how little launches matter. Think of some successful startups. How many of their launches do you remember? All you need from a launch is some initial core set of users. And then he goes into like why do founders believe this? Because it's easier, right? It would be so much less work if you could get users merely by broadcasting your existence rather than recruiting them one at a time. But even if what you're building really is great, getting users will always be a gradual process. Mainly because users have other things to think about. Thank God he said that. Mainly because other users have... you and I think about our company way more. 99... a thousand times more than anybody that loves our company does. And if you go back and watch what Steve Jobs said right when he came back to Apple, he said the same thing. He's like listen, the world is complicated. It is noisy. We are not going to get a chance to get people to remember much about us. No company is. So we have to be really clear about what we want them to know about us. I love what he said. He's like listen, even if what you're building is really great, getting users is always going to be a gradual process mainly because users have other things to think about. Yes, they're thinking about themselves. He goes back to why people shoot for a big launch instead of the laborious task of doing things that don't scale. You have to make an extraordinary effort and he italicized effort initially. Any strategy that omits the effort is suspect. I love this. Sam Walton, Autobiography, Founders234 if I'm not mistaken. He has like at the end, he's like, you know, here's a list of 10 things that are like are really important to know as you build your company and what the 10 things are great. Obviously, right? I love what he said before the 10 things though. He said he wouldn't even like he wouldn't even put work hard on the list because he says if you didn't know that already and you weren't willing to you wouldn't need his list anyways. Another way to think about this is what Jerry Seinfeld said about when he made his very successful show. He's like he's like I'm not into hacks. He's like the right way is the hard way or the I think he said the hard way the yeah, the right way is the hard way and you're seeing Paul say the same thing. He's like forget the big launch. You have to make an extraordinary effort. Initially any strategy that omits effort is suspect. And then he ends on a fantastically unique Paul Graham idea that need to do something unscalably laborious to get started is so nearly universal that it might be a good idea to stop thinking of startup ideas as scalers. Instead we should try thinking of them as pairs of what you're going to build plus the unscalable things that you're going to do initially to get your company going think of it as a pair. What are you going to build plus the unscalable things that you're going to do initially to get your company going? I love this idea now that there are two components you can try to be imaginative about the second as well as the first. Founders need to work hard in two dimensions. And that is where I'll leave it. I have a giant stack of his essays to get to that will be a part two. I would normally say that's 275 books down although technically this isn't a book although I'm interested. I wonder because of Paul's relationship with Stripe I wonder if there's anybody at Stripe Press that is thinking about turning I would love I know he did hackers and painters, but I would love like a book version of Paul's essays and I'm sure I'm not the only one. So anyways, that's 275 kind of books I guess podcasts down 1000 to go and I will talk to you again in part two of Paul Graham's essays.